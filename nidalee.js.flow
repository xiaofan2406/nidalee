/* @flow */
export type EditableAction = 'save' | 'cancel';

export type EditableProps = {
  value: string,
  onSave: (content: string) => void,

  placeholder: string,
  className: string,
  inline: boolean,
  autoTrim: boolean,
  blurAction: EditableAction,
  escAction: EditableAction,

  onKeyDown?: (event: KeyboardEvent) => void,
  onBlur?: (event: FocusEvent) => void,
  onDoubleClick?: (event: MouseEvent) => void,
};

export type PopoverTrigger = 'onClick' | 'onDoubleClick' | 'onMouseOver';
export type PopoverProps = {|
  label: string | React.Node,
  children: React.Node,

  trigger: PopoverTrigger,
  align: 'left' | 'right',
  direction: 'top' | 'bottom',
  zIndex: number,

  open?: boolean,
  className?: string,
|};

export type PopoverState = {|
  isVisible: boolean,
|};

export type EditableState = {
  isEditing: boolean,
};

declare module 'nidalee' {
  declare export class Editable extends React$Component<
    EditableProps,
    EditableState
  > {
    static defaultProps: {
      placeholder: string,
      className: string,
      inline: boolean,
      autoTrim: boolean,
      blurAction: EditableAction,
      escAction: EditableAction,
    };
  }

  declare export class Popover extends React$Component<
    PopoverProps,
    PopoverState
  > {
    static defaultProps: {
      trigger: PopoverTrigger,
      align: string,
      direction: string,
      zIndex: boolean,
    };
  }
}
